// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  // NOTE: You probably want to change this to another database later on
  provider = "mongodb"
  // This value is read from the .env file.
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId     String   @unique 
  softDeleted Boolean  @default(false) 
  createdAt   DateTime @default(now())

  Comment Comment[]
  Post    Post[]
  Feed    Feed[]
  Space   Space[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String?   @default("")
  image     String?   @default("")
  published Boolean   @default(true)
  Comment   Comment[]

  author   User?   @relation(fields: [authorId], references: [clerkId])
  authorId String?
  Space    Space?  @relation(fields: [spaceId], references: [id])
  spaceId  String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likedByIDs String[] @default([])

  softDeleted Boolean @default(false)
}

model Feed {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  owner   User?   @relation(fields: [ownerId], references: [clerkId])
  ownerId String?

  followersIds String[] @default([]) @db.ObjectId

  visibility String @default("public")

  icon   String? @default("")
  banner String? @default("")

  softDeleted Boolean       @default(false)
  SpaceInFeed SpaceInFeed[]
}

model SpaceInFeed {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  feed   Feed?   @relation(fields: [feedId], references: [id])
  feedId String? @db.ObjectId

  space   Space?  @relation(fields: [spaceId], references: [id])
  spaceId String? @db.ObjectId
}

model Space {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  name String? @default("")

  owner   User?   @relation(fields: [ownerId], references: [clerkId])
  ownerId String?

  followersIds String[] @default([]) @db.ObjectId

  visibility String @default("public")

  icon   String? @default("")
  banner String? @default("")

  softDeleted Boolean       @default(false)
  Post        Post[]
  SpaceInFeed SpaceInFeed[]
}

model Comment {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  content String? @default("")

  author   User?  @relation(fields: [authorId], references: [clerkId])
  authorId String

  post   Post?  @relation(fields: [postId], references: [id])
  postId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
